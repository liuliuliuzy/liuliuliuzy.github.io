<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>pwn - 标签 - zyleo&#39;s blog</title>
        <link>https://liuliuliuzy.github.io/tags/pwn/</link>
        <description>pwn - 标签 - zyleo&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1872405512@qq.com (zyleo)</managingEditor>
            <webMaster>1872405512@qq.com (zyleo)</webMaster><lastBuildDate>Thu, 03 Mar 2022 22:29:19 &#43;0800</lastBuildDate><atom:link href="https://liuliuliuzy.github.io/tags/pwn/" rel="self" type="application/rss+xml" /><item>
    <title>Susctf2022 Happytree</title>
    <link>https://liuliuliuzy.github.io/2022-03-03-susctf2022-happytree/</link>
    <pubDate>Thu, 03 Mar 2022 22:29:19 &#43;0800</pubDate><author>
        <name>zyleo</name>
    </author><guid>https://liuliuliuzy.github.io/2022-03-03-susctf2022-happytree/</guid>
    <description><![CDATA[<blockquote>
<p>许久未更新了hhh</p>
</blockquote>]]></description>
</item><item>
    <title>pwn初学者的进阶（四）：SROP</title>
    <link>https://liuliuliuzy.github.io/2021-11-01-srop%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Mon, 01 Nov 2021 19:35:30 &#43;0800</pubDate><author>
        <name>zyleo</name>
    </author><guid>https://liuliuliuzy.github.io/2021-11-01-srop%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[<p>SROP，听着似乎是一个非常高大上的ROP方式，再加上涉及到signal和内核等概念，很容易给人一种难以理解的第一印象。但看过<a href="https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/advanced-rop/srop/" target="_blank" rel="noopener noreffer">ctf-wiki</a>之后你会发现，原理非常简单易懂。</p>]]></description>
</item><item>
    <title>pwn初学者的进阶（三）：堆学习</title>
    <link>https://liuliuliuzy.github.io/2021-09-06-buuctf%E5%A0%86%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Mon, 06 Sep 2021 14:36:30 &#43;0800</pubDate><author>
        <name>zyleo</name>
    </author><guid>https://liuliuliuzy.github.io/2021-09-06-buuctf%E5%A0%86%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[0x00 前言 零零散散地看了两三天时间才把堆的一些基础内容与一道题看懂😑 0x01 picoctf_2018_are you root 题目链接 感天动地，我居然自己做出了一道堆题，虽然这题非常简单。 这题好]]></description>
</item><item>
    <title>pwn初学者的进阶（二）：ret2dlresolve学习记录</title>
    <link>https://liuliuliuzy.github.io/2021-09-02-ret2dlresolve%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Thu, 02 Sep 2021 14:03:58 &#43;0800</pubDate><author>
        <name>zyleo</name>
    </author><guid>https://liuliuliuzy.github.io/2021-09-02-ret2dlresolve%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[<p>花了一个上午时间，看了一下ret2dlresolve的基本原理与基本的利用过程。觉得步骤与相关细节要素还是蛮多的，为防止今后某一天再用到的时候忘得干干净净，特此记录一些我个人的理解，加深印象。</p>]]></description>
</item><item>
    <title>pwn初学者的进阶（一）：格式化字符串</title>
    <link>https://liuliuliuzy.github.io/2021-08-27-buuctf-pwn-fmtstr/</link>
    <pubDate>Fri, 27 Aug 2021 23:43:05 &#43;0800</pubDate><author>
        <name>zyleo</name>
    </author><guid>https://liuliuliuzy.github.io/2021-08-27-buuctf-pwn-fmtstr/</guid>
    <description><![CDATA[题目链接 checksec 结果 1 2 3 4 5 Arch: i386-32-little RELRO: Partial RELRO Stack: Canary found NX: NX enabled PIE: No PIE (0x8048000) IDA分析 IDAimage-20210828140628177 " IDA 很明显，存在格式化字符串漏洞。通过x==4的判断就能够拿到shell，]]></description>
</item><item>
    <title>记录一道ret2csu的pwn题</title>
    <link>https://liuliuliuzy.github.io/2021-08-26-%E8%AE%B0%E5%BD%95%E4%B8%80%E9%81%93ret2csu%E7%9A%84pwn%E9%A2%98/</link>
    <pubDate>Thu, 26 Aug 2021 17:43:20 &#43;0800</pubDate><author>
        <name>zyleo</name>
    </author><guid>https://liuliuliuzy.github.io/2021-08-26-%E8%AE%B0%E5%BD%95%E4%B8%80%E9%81%93ret2csu%E7%9A%84pwn%E9%A2%98/</guid>
    <description><![CDATA[0x00 前言 写这道题之前, 大家首先要了解, 想要获得一个shell, 除了system(&quot;/bin/sh&quot;) 以外, 还有一种更好的方]]></description>
</item></channel>
</rss>
